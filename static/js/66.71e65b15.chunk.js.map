{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.js"],"names":[],"mappings":"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","file":"static/js/66.71e65b15.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@$#!.:]?[\\w-?]+%?)|[@#!.]/g,\r\n    comments: {\r\n        blockComment: ['/*', '*/'],\r\n        lineComment: '//'\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/'),\r\n            end: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/')\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.scss',\r\n    ws: '[ \\t\\n\\r\\f]*',\r\n    identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.bracket' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '<', close: '>', token: 'delimiter.angle' }\r\n    ],\r\n    tokenizer: {\r\n        root: [{ include: '@selector' }],\r\n        selector: [\r\n            { include: '@comments' },\r\n            { include: '@import' },\r\n            { include: '@variabledeclaration' },\r\n            { include: '@warndebug' },\r\n            ['[@](include)', { token: 'keyword', next: '@includedeclaration' }],\r\n            [\r\n                '[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)',\r\n                { token: 'keyword', next: '@keyframedeclaration' }\r\n            ],\r\n            ['[@](page|content|font-face|-moz-document)', { token: 'keyword' }],\r\n            ['[@](charset|namespace)', { token: 'keyword', next: '@declarationbody' }],\r\n            ['[@](function)', { token: 'keyword', next: '@functiondeclaration' }],\r\n            ['[@](mixin)', { token: 'keyword', next: '@mixindeclaration' }],\r\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\r\n            { include: '@controlstatement' },\r\n            { include: '@selectorname' },\r\n            ['[&\\\\*]', 'tag'],\r\n            ['[>\\\\+,]', 'delimiter'],\r\n            ['\\\\[', { token: 'delimiter.bracket', next: '@selectorattribute' }],\r\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }]\r\n        ],\r\n        selectorbody: [\r\n            ['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', 'attribute.name', '@rulevalue'],\r\n            { include: '@selector' },\r\n            ['[@](extend)', { token: 'keyword', next: '@extendbody' }],\r\n            ['[@](return)', { token: 'keyword', next: '@declarationbody' }],\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }]\r\n        ],\r\n        selectorname: [\r\n            ['#{', { token: 'meta', next: '@variableinterpolation' }],\r\n            ['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', 'tag'] // selector (.foo, div, ...)\r\n        ],\r\n        selectorattribute: [\r\n            { include: '@term' },\r\n            [']', { token: 'delimiter.bracket', next: '@pop' }]\r\n        ],\r\n        term: [\r\n            { include: '@comments' },\r\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\r\n            { include: '@functioninvocation' },\r\n            { include: '@numbers' },\r\n            { include: '@strings' },\r\n            { include: '@variablereference' },\r\n            ['(and\\\\b|or\\\\b|not\\\\b)', 'operator'],\r\n            { include: '@name' },\r\n            ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'operator'],\r\n            [',', 'delimiter'],\r\n            ['!default', 'literal'],\r\n            ['\\\\(', { token: 'delimiter.parenthesis', next: '@parenthizedterm' }]\r\n        ],\r\n        rulevalue: [\r\n            { include: '@term' },\r\n            ['!important', 'literal'],\r\n            [';', 'delimiter', '@pop'],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@nestedproperty' }],\r\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\r\n        ],\r\n        nestedproperty: [\r\n            ['[*_]?@identifier@ws:', 'attribute.name', '@rulevalue'],\r\n            { include: '@comments' },\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }]\r\n        ],\r\n        warndebug: [['[@](warn|debug)', { token: 'keyword', next: '@declarationbody' }]],\r\n        import: [['[@](import)', { token: 'keyword', next: '@declarationbody' }]],\r\n        variabledeclaration: [\r\n            // sass variables\r\n            ['\\\\$@identifier@ws:', 'variable.decl', '@declarationbody']\r\n        ],\r\n        urldeclaration: [\r\n            { include: '@strings' },\r\n            ['[^)\\r\\n]+', 'string'],\r\n            ['\\\\)', { token: 'meta', next: '@pop' }]\r\n        ],\r\n        parenthizedterm: [\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }]\r\n        ],\r\n        declarationbody: [\r\n            { include: '@term' },\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\r\n        ],\r\n        extendbody: [\r\n            { include: '@selectorname' },\r\n            ['!optional', 'literal'],\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\r\n        ],\r\n        variablereference: [\r\n            // sass variable reference\r\n            ['\\\\$@identifier', 'variable.ref'],\r\n            ['\\\\.\\\\.\\\\.', 'operator'],\r\n            ['#{', { token: 'meta', next: '@variableinterpolation' }] // sass var resolve\r\n        ],\r\n        variableinterpolation: [\r\n            { include: '@variablereference' },\r\n            ['}', { token: 'meta', next: '@pop' }]\r\n        ],\r\n        comments: [\r\n            ['\\\\/\\\\*', 'comment', '@comment'],\r\n            ['\\\\/\\\\/+.*', 'comment']\r\n        ],\r\n        comment: [\r\n            ['\\\\*\\\\/', 'comment', '@pop'],\r\n            ['.', 'comment']\r\n        ],\r\n        name: [['@identifier', 'attribute.value']],\r\n        numbers: [\r\n            ['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', { token: 'number', next: '@units' }],\r\n            ['#[0-9a-fA-F_]+(?!\\\\w)', 'number.hex']\r\n        ],\r\n        units: [\r\n            [\r\n                '(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?',\r\n                'number',\r\n                '@pop'\r\n            ]\r\n        ],\r\n        functiondeclaration: [\r\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@functionbody' }]\r\n        ],\r\n        mixindeclaration: [\r\n            // mixin with parameters\r\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\r\n            // mixin without parameters\r\n            ['@identifier', 'meta'],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }]\r\n        ],\r\n        parameterdeclaration: [\r\n            ['\\\\$@identifier@ws:', 'variable.decl'],\r\n            ['\\\\.\\\\.\\\\.', 'operator'],\r\n            [',', 'delimiter'],\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'meta', next: '@pop' }]\r\n        ],\r\n        includedeclaration: [\r\n            { include: '@functioninvocation' },\r\n            ['@identifier', 'meta'],\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }]\r\n        ],\r\n        keyframedeclaration: [\r\n            ['@identifier', 'meta'],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@keyframebody' }]\r\n        ],\r\n        keyframebody: [\r\n            { include: '@term' },\r\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }],\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }]\r\n        ],\r\n        controlstatement: [\r\n            [\r\n                '[@](if|else|for|while|each|media)',\r\n                { token: 'keyword.flow', next: '@controlstatementdeclaration' }\r\n            ]\r\n        ],\r\n        controlstatementdeclaration: [\r\n            ['(in|from|through|if|to)\\\\b', { token: 'keyword.flow' }],\r\n            { include: '@term' },\r\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }]\r\n        ],\r\n        functionbody: [\r\n            ['[@](return)', { token: 'keyword' }],\r\n            { include: '@variabledeclaration' },\r\n            { include: '@term' },\r\n            { include: '@controlstatement' },\r\n            [';', 'delimiter'],\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }]\r\n        ],\r\n        functioninvocation: [['@identifier\\\\(', { token: 'meta', next: '@functionarguments' }]],\r\n        functionarguments: [\r\n            ['\\\\$@identifier@ws:', 'attribute.name'],\r\n            ['[,]', 'delimiter'],\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'meta', next: '@pop' }]\r\n        ],\r\n        strings: [\r\n            ['~?\"', { token: 'string.delimiter', next: '@stringenddoublequote' }],\r\n            [\"~?'\", { token: 'string.delimiter', next: '@stringendquote' }]\r\n        ],\r\n        stringenddoublequote: [\r\n            ['\\\\\\\\.', 'string'],\r\n            ['\"', { token: 'string.delimiter', next: '@pop' }],\r\n            ['.', 'string']\r\n        ],\r\n        stringendquote: [\r\n            ['\\\\\\\\.', 'string'],\r\n            [\"'\", { token: 'string.delimiter', next: '@pop' }],\r\n            ['.', 'string']\r\n        ]\r\n    }\r\n};\r\n"],"sourceRoot":""}