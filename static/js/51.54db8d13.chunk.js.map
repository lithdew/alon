{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.js"],"names":[],"mappings":"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","file":"static/js/51.54db8d13.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    // the default separators except `$-`\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        lineComment: '#',\r\n        blockComment: ['<#', '#>']\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"', notIn: ['string'] },\r\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp('^\\\\s*#region\\\\b'),\r\n            end: new RegExp('^\\\\s*#endregion\\\\b')\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    ignoreCase: true,\r\n    tokenPostfix: '.ps1',\r\n    brackets: [\r\n        { token: 'delimiter.curly', open: '{', close: '}' },\r\n        { token: 'delimiter.square', open: '[', close: ']' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\r\n    ],\r\n    keywords: [\r\n        'begin',\r\n        'break',\r\n        'catch',\r\n        'class',\r\n        'continue',\r\n        'data',\r\n        'define',\r\n        'do',\r\n        'dynamicparam',\r\n        'else',\r\n        'elseif',\r\n        'end',\r\n        'exit',\r\n        'filter',\r\n        'finally',\r\n        'for',\r\n        'foreach',\r\n        'from',\r\n        'function',\r\n        'if',\r\n        'in',\r\n        'param',\r\n        'process',\r\n        'return',\r\n        'switch',\r\n        'throw',\r\n        'trap',\r\n        'try',\r\n        'until',\r\n        'using',\r\n        'var',\r\n        'while',\r\n        'workflow',\r\n        'parallel',\r\n        'sequence',\r\n        'inlinescript',\r\n        'configuration'\r\n    ],\r\n    helpKeywords: /SYNOPSIS|DESCRIPTION|PARAMETER|EXAMPLE|INPUTS|OUTPUTS|NOTES|LINK|COMPONENT|ROLE|FUNCTIONALITY|FORWARDHELPTARGETNAME|FORWARDHELPCATEGORY|REMOTEHELPRUNSPACE|EXTERNALHELP/,\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?&%|+\\-*\\/\\^;\\.,]+/,\r\n    escapes: /`(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // commands and keywords\r\n            [\r\n                /[a-zA-Z_][\\w-]*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': ''\r\n                    }\r\n                }\r\n            ],\r\n            // whitespace\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            // labels\r\n            [/^:\\w*/, 'metatag'],\r\n            // variables\r\n            [\r\n                /\\$(\\{((global|local|private|script|using):)?[\\w]+\\}|((global|local|private|script|using):)?[\\w]+)/,\r\n                'variable'\r\n            ],\r\n            // Comments\r\n            [/<#/, 'comment', '@comment'],\r\n            [/#.*$/, 'comment'],\r\n            // delimiters\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, 'delimiter'],\r\n            // numbers\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\r\n            [/\\d+?/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings:\r\n            [/\\@\"/, 'string', '@herestring.\"'],\r\n            [/\\@'/, 'string', \"@herestring.'\"],\r\n            [\r\n                /\"/,\r\n                {\r\n                    cases: {\r\n                        '@eos': 'string',\r\n                        '@default': { token: 'string', next: '@string.\"' }\r\n                    }\r\n                }\r\n            ],\r\n            [\r\n                /'/,\r\n                {\r\n                    cases: {\r\n                        '@eos': 'string',\r\n                        '@default': { token: 'string', next: \"@string.'\" }\r\n                    }\r\n                }\r\n            ]\r\n        ],\r\n        string: [\r\n            [\r\n                /[^\"'\\$`]+/,\r\n                {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ],\r\n            [\r\n                /@escapes/,\r\n                {\r\n                    cases: {\r\n                        '@eos': { token: 'string.escape', next: '@popall' },\r\n                        '@default': 'string.escape'\r\n                    }\r\n                }\r\n            ],\r\n            [\r\n                /`./,\r\n                {\r\n                    cases: {\r\n                        '@eos': {\r\n                            token: 'string.escape.invalid',\r\n                            next: '@popall'\r\n                        },\r\n                        '@default': 'string.escape.invalid'\r\n                    }\r\n                }\r\n            ],\r\n            [\r\n                /\\$[\\w]+$/,\r\n                {\r\n                    cases: {\r\n                        '$S2==\"': { token: 'variable', next: '@popall' },\r\n                        '@default': { token: 'string', next: '@popall' }\r\n                    }\r\n                }\r\n            ],\r\n            [\r\n                /\\$[\\w]+/,\r\n                {\r\n                    cases: {\r\n                        '$S2==\"': 'variable',\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ],\r\n            [\r\n                /[\"']/,\r\n                {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': {\r\n                            cases: {\r\n                                '@eos': { token: 'string', next: '@popall' },\r\n                                '@default': 'string'\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        ],\r\n        herestring: [\r\n            [\r\n                /^\\s*([\"'])@/,\r\n                {\r\n                    cases: {\r\n                        '$1==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ],\r\n            [/[^\\$`]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/`./, 'string.escape.invalid'],\r\n            [\r\n                /\\$[\\w]+/,\r\n                {\r\n                    cases: {\r\n                        '$S2==\"': 'variable',\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ]\r\n        ],\r\n        comment: [\r\n            [/[^#\\.]+/, 'comment'],\r\n            [/#>/, 'comment', '@pop'],\r\n            [/(\\.)(@helpKeywords)(?!\\w)/, { token: 'comment.keyword.$2' }],\r\n            [/[\\.#]/, 'comment']\r\n        ]\r\n    }\r\n};\r\n"],"sourceRoot":""}